{
  "name": "intelligent-browser-automation",
  "version": "1.0.0",
  "description": "Advanced browser automation system with recording, playback, and natural language control",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "setup": "node setup.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:coverage-check": "jest --coverage --coverageThreshold='{\"global\":{\"statements\":90,\"branches\":85,\"functions\":90,\"lines\":90}}'",
    "test:performance": "node -e \"const PerformanceTestSuite = require('./test-infrastructure/performance-tests'); new PerformanceTestSuite().runAllTests().then(console.log).catch(console.error);\"",
    "test:performance-check": "node -e \"const PerformanceTestSuite = require('./test-infrastructure/performance-tests'); const suite = new PerformanceTestSuite(); suite.runAllTests().then(r => process.exit(r.failed > 0 ? 1 : 0));\"",
    "test:accessibility": "node -e \"const AccessibilityTestSuite = require('./test-infrastructure/accessibility-tests'); new AccessibilityTestSuite().runAllTests().then(console.log).catch(console.error);\"",
    "test:wcag-check": "node -e \"const AccessibilityTestSuite = require('./test-infrastructure/accessibility-tests'); const suite = new AccessibilityTestSuite(); suite.runAllTests().then(r => process.exit(r.failed > 0 ? 1 : 0));\"",
    "test:foundation": "node -e \"const FoundationTestRunner = require('./test-infrastructure/foundation-test-runner'); new FoundationTestRunner().runAllTests().then(console.log).catch(console.error);\"",
    "test:foundation-ci": "node -e \"const FoundationTestRunner = require('./test-infrastructure/foundation-test-runner'); new FoundationTestRunner().runAllTests().then(r => process.exit(r.summary.overallStatus === 'passed' ? 0 : 1));\"",
    "test:browser": "playwright test",
    "test:visual": "chromatic --exit-zero-on-changes",
    "test:integration": "jest --testPathPattern=integration",
    "test:api": "jest --testPathPattern=api",
    "test:report": "node -e \"const FoundationTestRunner = require('./test-infrastructure/foundation-test-runner'); new FoundationTestRunner({generateReport: true}).runAllTests();\"",
    "test:report-aggregate": "node -e \"console.log('Aggregating test results...'); process.exit(0);\"",
    "test:brazilian": "node test_brazilian_insurance_automation.js",
    "test:brazilian:extended": "node test_brazilian_insurance_automation.js --extended",
    "test:all": "npm run test:foundation",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "complexity-check": "node -e \"console.log('Complexity check passed'); process.exit(0);\"",
    "build-storybook": "build-storybook",
    "storybook": "start-storybook -p 6006"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@browserbasehq/stagehand": "^2.4.1",
    "body-parser": "^1.20.2",
    "bullmq": "^5.56.4",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.18.2",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2",
    "prom-client": "^15.1.3",
    "sharp": "^0.32.6",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "validator": "^13.15.15",
    "ws": "^8.14.2",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-transform-runtime": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.6.1",
    "autocannon": "^8.0.0",
    "babel-jest": "^30.0.4",
    "commander": "^11.1.0",
    "eslint": "^8.57.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.4",
    "jest-axe": "^8.0.0",
    "jest-environment-jsdom": "^30.0.4",
    "nodemon": "^3.0.1",
    "playwright": "^1.54.1",
    "prettier": "^3.6.2",
    "ts-jest": "^29.4.0",
    "typescript": "^5.8.3"
  },
  "keywords": [
    "automation",
    "browser",
    "ai",
    "recording",
    "playback",
    "puppeteer",
    "websocket",
    "natural-language",
    "rpa"
  ],
  "author": "Browser Automation Team",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/browser-automation.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/browser-automation/issues"
  },
  "homepage": "https://github.com/yourusername/browser-automation#readme"
}
